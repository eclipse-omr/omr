pipeline {
    agent{label 'Linux && x86 && compile:riscv64'}
    environment {
        PATH = "/usr/lib/ccache/:$PATH"
    }
    stages {
        stage('Get Sources') {
            steps {
                timestamps {
                    checkout poll: false, scm: [$class: 'GitSCM', branches: [[name: '${sha1}']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[name: 'origin', refspec: '+refs/pull/*:refs/remotes/origin/pr/*', url: 'https://github.com/eclipse/omr.git']]]
                }
            }
        }
        stage('Build') {
            steps {
                timestamps {
                    echo 'Output CCACHE stats before running and clear them'
                    sh '''ccache -s -z'''

                    dir('build_native') {
                        echo 'Configure...'
                        sh """cmake \
                                    -DOMR_THREAD=OFF \
                                    -DOMR_PORT=OFF \
                                    -DOMR_OMRSIG=OFF \
                                    -DOMR_GC=OFF \
                                    -DOMR_FVTEST=OFF \
                                    -DOMR_GC_FULL_POINTERS=ON \
                                    .."""

                        echo 'Compile...'
                        sh '''make -j4'''
                    }

                    dir('build') {
                        echo 'Configure...'
                        sh """cmake -Wdev -C../cmake/caches/Travis.cmake \
                                    -DCMAKE_FIND_ROOT_PATH=${CROSS_SYSROOT_RISCV64} \
                                    -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/riscv64-linux-cross.cmake \
                                    -DOMR_TOOLS_IMPORTFILE=../build_native/tools/ImportTools.cmake \
                                    .."""

                        echo 'Compile...'
                        sh '''make -j4'''
                    }

                    echo 'Output CCACHE stats after running'
                    sh '''ccache -s'''
                }
            }
        }
        stage('Test') {
            steps {
                timestamps {
                    echo "Currently no sanity tests..."
                }
            }
        }
    }
    post {
        always {
            echo 'Cleanup workspace'
            deleteDir()
        }
    }
}

