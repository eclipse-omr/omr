
pipeline {
    agent {label "${params.MACHINE_LABEL}"}
    parameters {
        string (defaultValue: 'https://github.com/eclipse/omr.git', description: 'URL for the repo to use', name: 'REPO_URL')
        string (defaultValue: 'master', description: 'Branch name to use', name: 'BRANCH_NAME')
        string (defaultValue: '', description: 'Machine label expression for jenkins node, like Linux&&390 or aix&&ppc, etc', name: 'MACHINE_LABEL')
        choice (choices: 'linux_x86-64\nosx_x86-64\nlinux_ppc-64\nlinux_ppc-64_le_gcc\nlinux_armmak\nlinux_390-64\naix_ppc-64', description: 'SPEC?', name: 'SPEC')
    }
    environment {
        PATH = "/usr/lib/ccache/:$PATH"
        GEN_GTEST_OUTPUT = true
    }
    stages {
        stage('Get Sources') {
            steps {
                timestamps {
                    checkout([
				        $class: 'GitSCM', branches: [[name: "*/${params.BRANCH_NAME}"]],
			        	userRemoteConfigs: [[url: "${params.REPO_URL}"]]
			        ])
                }
            }
        }
        stage('Build') {
            steps {
                timestamps {
                    echo 'Configure...'
                    sh "cd $WORKSPACE/omr"
                    sh'''make -f run_configure.mk OMRGLUE=./example/glue SPEC=linux_x86-64'''
                   
                    echo 'Compile...'
                    sh '''make -j8'''

                }
            }
        }
        stage('Test') {
            steps {
                timestamps {
                    echo "Sanity Test..."
                    sh '''make test'''
                }
            }
        }
    }
    post {
        always {
            step([$class: 'XUnitBuilder',
                thresholds: [[$class: 'FailedThreshold', unstableThreshold: '1']],
                tools: [[$class: 'GoogleTestType', skipNoTestFiles: true, pattern: '**/test_output/**']]])
            archiveArtifacts artifacts: '**/test_output/**', fingerprint: true, allowEmptyArchive: true
            echo 'Cleanup workspace'
            deleteDir()
        }
    }
}